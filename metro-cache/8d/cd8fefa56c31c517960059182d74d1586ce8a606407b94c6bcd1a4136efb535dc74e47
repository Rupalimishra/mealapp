{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"./Header","data":{"isAsync":false}},{"name":"../../TransitionConfigs/HeaderStyleInterpolators","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = HeaderContainer;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[4], \"react-navigation\");\n\n  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./Header\"));\n\n  var _HeaderStyleInterpolators = _$$_REQUIRE(_dependencyMap[6], \"../../TransitionConfigs/HeaderStyleInterpolators\");\n\n  function HeaderContainer(_ref) {\n    var mode = _ref.mode,\n        scenes = _ref.scenes,\n        layout = _ref.layout,\n        insets = _ref.insets,\n        getFocusedRoute = _ref.getFocusedRoute,\n        getPreviousRoute = _ref.getPreviousRoute,\n        onContentHeightChange = _ref.onContentHeightChange,\n        gestureDirection = _ref.gestureDirection,\n        styleInterpolator = _ref.styleInterpolator,\n        style = _ref.style;\n    var focusedRoute = getFocusedRoute();\n    return React.createElement(_reactNative.View, {\n      pointerEvents: \"box-none\",\n      style: style\n    }, scenes.slice(-3).map(function (scene, i, self) {\n      if (mode === 'screen' && i !== self.length - 1 || !scene) {\n        return null;\n      }\n\n      var options = scene.descriptor.options;\n      var isFocused = focusedRoute.key === scene.route.key;\n      var previousRoute = getPreviousRoute({\n        route: scene.route\n      });\n      var previous;\n\n      if (previousRoute) {\n        for (var j = i - 1; j >= 0; j--) {\n          var s = self[j];\n\n          if (s && s.route.key === previousRoute.key) {\n            previous = s;\n            break;\n          }\n        }\n      }\n\n      var previousScene = self[i - 1];\n      var nextScene = self[i + 1];\n      var isHeaderStatic = previousScene && previousScene.descriptor.options.headerShown === false && !nextScene || nextScene && nextScene.descriptor.options.headerShown === false;\n      var props = {\n        mode: mode,\n        layout: layout,\n        insets: insets,\n        scene: scene,\n        previous: previous,\n        navigation: scene.descriptor.navigation,\n        styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? _HeaderStyleInterpolators.forSlideUp : gestureDirection === 'horizontal-inverted' ? _HeaderStyleInterpolators.forSlideRight : _HeaderStyleInterpolators.forSlideLeft : styleInterpolator : _HeaderStyleInterpolators.forNoAnimation\n      };\n      return React.createElement(_reactNavigation.NavigationContext.Provider, {\n        key: scene.route.key,\n        value: scene.descriptor.navigation\n      }, React.createElement(React.Fragment, null, React.createElement(_reactNative.View, {\n        onLayout: onContentHeightChange ? function (e) {\n          return onContentHeightChange({\n            route: scene.route,\n            height: e.nativeEvent.layout.height\n          });\n        } : undefined,\n        pointerEvents: isFocused ? 'box-none' : 'none',\n        accessibilityElementsHidden: !isFocused,\n        importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n        style: mode === 'float' && !isFocused || options.headerTransparent ? styles.header : null\n      }, options.headerShown !== false ? options.header !== undefined ? options.header(props) : React.createElement(_Header.default, props) : null)));\n    }));\n  }\n\n  var styles = _reactNative.StyleSheet.create({\n    header: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0\n    }\n  });\n});","lineCount":97,"map":[[11,0,1,0],[13,0,2,0],[15,0,3,0],[17,0,4,0],[19,0,5,0],[21,0,6,15],[21,11,6,24,"HeaderContainer"],[21,26,6,15],[21,33,17,3],[22,0,17,3],[22,8,7,2,"mode"],[22,12,17,3],[22,20,7,2,"mode"],[22,24,17,3],[23,0,17,3],[23,8,8,2,"scenes"],[23,14,17,3],[23,22,8,2,"scenes"],[23,28,17,3],[24,0,17,3],[24,8,9,2,"layout"],[24,14,17,3],[24,22,9,2,"layout"],[24,28,17,3],[25,0,17,3],[25,8,10,2,"insets"],[25,14,17,3],[25,22,10,2,"insets"],[25,28,17,3],[26,0,17,3],[26,8,11,2,"getFocusedRoute"],[26,23,17,3],[26,31,11,2,"getFocusedRoute"],[26,46,17,3],[27,0,17,3],[27,8,12,2,"getPreviousRoute"],[27,24,17,3],[27,32,12,2,"getPreviousRoute"],[27,48,17,3],[28,0,17,3],[28,8,13,2,"onContentHeightChange"],[28,29,17,3],[28,37,13,2,"onContentHeightChange"],[28,58,17,3],[29,0,17,3],[29,8,14,2,"gestureDirection"],[29,24,17,3],[29,32,14,2,"gestureDirection"],[29,48,17,3],[30,0,17,3],[30,8,15,2,"styleInterpolator"],[30,25,17,3],[30,33,15,2,"styleInterpolator"],[30,50,17,3],[31,0,17,3],[31,8,16,2,"style"],[31,13,17,3],[31,21,16,2,"style"],[31,26,17,3],[32,0,18,2],[32,8,18,8,"focusedRoute"],[32,20,18,20],[32,23,18,23,"getFocusedRoute"],[32,38,18,38],[32,40,18,2],[33,0,19,2],[33,11,19,22,"React"],[33,16,19,27],[33,17,19,28,"createElement"],[33,30,19,22],[33,31,19,42,"View"],[33,48,19,22],[33,50,19,48],[34,0,20,4,"pointerEvents"],[34,6,20,4,"pointerEvents"],[34,19,20,17],[34,21,20,19],[34,31,19,48],[35,0,21,4,"style"],[35,6,21,4,"style"],[35,11,21,9],[35,13,21,11,"style"],[36,0,19,48],[36,5,19,22],[36,7,22,5,"scenes"],[36,13,22,11],[36,14,22,12,"slice"],[36,19,22,5],[36,20,22,18],[36,21,22,19],[36,22,22,5],[36,24,22,22,"map"],[36,27,22,5],[36,28,22,26],[36,38,22,27,"scene"],[36,43,22,26],[36,45,22,34,"i"],[36,46,22,26],[36,48,22,37,"self"],[36,52,22,26],[36,54,22,46],[37,0,23,4],[37,10,23,8,"mode"],[37,14,23,12],[37,19,23,17],[37,27,23,8],[37,31,23,29,"i"],[37,32,23,30],[37,37,23,35,"self"],[37,41,23,39],[37,42,23,40,"length"],[37,48,23,35],[37,51,23,49],[37,52,23,8],[37,56,23,54],[37,57,23,55,"scene"],[37,62,23,4],[37,64,23,62],[38,0,24,6],[38,15,24,13],[38,19,24,6],[39,0,25,5],[41,0,22,46],[41,10,28,6,"options"],[41,17,22,46],[41,20,29,8,"scene"],[41,25,29,13],[41,26,29,14,"descriptor"],[41,36,22,46],[41,37,28,6,"options"],[41,44,22,46],[42,0,30,4],[42,10,30,10,"isFocused"],[42,19,30,19],[42,22,30,22,"focusedRoute"],[42,34,30,34],[42,35,30,35,"key"],[42,38,30,22],[42,43,30,43,"scene"],[42,48,30,48],[42,49,30,49,"route"],[42,54,30,43],[42,55,30,55,"key"],[42,58,30,4],[43,0,31,4],[43,10,31,10,"previousRoute"],[43,23,31,23],[43,26,31,26,"getPreviousRoute"],[43,42,31,42],[43,43,31,43],[44,0,32,6,"route"],[44,8,32,6,"route"],[44,13,32,11],[44,15,32,13,"scene"],[44,20,32,18],[44,21,32,19,"route"],[45,0,31,43],[45,7,31,42],[45,8,31,4],[46,0,34,4],[46,10,34,8,"previous"],[46,18,34,4],[48,0,36,4],[48,10,36,8,"previousRoute"],[48,23,36,4],[48,25,36,23],[49,0,39,6],[49,13,39,11],[49,17,39,15,"j"],[49,18,39,16],[49,21,39,19,"i"],[49,22,39,20],[49,25,39,23],[49,26,39,6],[49,28,39,26,"j"],[49,29,39,27],[49,33,39,31],[49,34,39,6],[49,36,39,34,"j"],[49,37,39,35],[49,39,39,6],[49,41,39,39],[50,0,40,8],[50,14,40,14,"s"],[50,15,40,15],[50,18,40,18,"self"],[50,22,40,22],[50,23,40,23,"j"],[50,24,40,22],[50,25,40,8],[52,0,42,8],[52,14,42,12,"s"],[52,15,42,13],[52,19,42,17,"s"],[52,20,42,18],[52,21,42,19,"route"],[52,26,42,17],[52,27,42,25,"key"],[52,30,42,17],[52,35,42,33,"previousRoute"],[52,48,42,46],[52,49,42,47,"key"],[52,52,42,8],[52,54,42,52],[53,0,43,10,"previous"],[53,12,43,10,"previous"],[53,20,43,18],[53,23,43,21,"s"],[53,24,43,10],[54,0,44,10],[55,0,45,9],[56,0,46,7],[57,0,47,5],[59,0,51,4],[59,10,51,10,"previousScene"],[59,23,51,23],[59,26,51,26,"self"],[59,30,51,30],[59,31,51,31,"i"],[59,32,51,32],[59,35,51,35],[59,36,51,30],[59,37,51,4],[60,0,52,4],[60,10,52,10,"nextScene"],[60,19,52,19],[60,22,52,22,"self"],[60,26,52,26],[60,27,52,27,"i"],[60,28,52,28],[60,31,52,31],[60,32,52,26],[60,33,52,4],[61,0,53,4],[61,10,53,10,"isHeaderStatic"],[61,24,53,24],[61,27,53,27,"previousScene"],[61,40,53,40],[61,44,53,44,"previousScene"],[61,57,53,57],[61,58,53,58,"descriptor"],[61,68,53,44],[61,69,53,69,"options"],[61,76,53,44],[61,77,53,77,"headerShown"],[61,88,53,44],[61,93,53,93],[61,98,53,27],[61,102,55,4],[61,103,55,5,"nextScene"],[61,112,53,27],[61,116,55,18,"nextScene"],[61,125,55,27],[61,129,55,31,"nextScene"],[61,138,55,40],[61,139,55,41,"descriptor"],[61,149,55,31],[61,150,55,52,"options"],[61,157,55,31],[61,158,55,60,"headerShown"],[61,169,55,31],[61,174,55,76],[61,179,53,4],[62,0,56,4],[62,10,56,10,"props"],[62,15,56,15],[62,18,56,18],[63,0,57,6,"mode"],[63,8,57,6,"mode"],[63,12,57,10],[63,14,57,6,"mode"],[63,18,56,18],[64,0,58,6,"layout"],[64,8,58,6,"layout"],[64,14,58,12],[64,16,58,6,"layout"],[64,22,56,18],[65,0,59,6,"insets"],[65,8,59,6,"insets"],[65,14,59,12],[65,16,59,6,"insets"],[65,22,56,18],[66,0,60,6,"scene"],[66,8,60,6,"scene"],[66,13,60,11],[66,15,60,6,"scene"],[66,20,56,18],[67,0,61,6,"previous"],[67,8,61,6,"previous"],[67,16,61,14],[67,18,61,6,"previous"],[67,26,56,18],[68,0,62,6,"navigation"],[68,8,62,6,"navigation"],[68,18,62,16],[68,20,62,18,"scene"],[68,25,62,23],[68,26,62,24,"descriptor"],[68,36,62,18],[68,37,62,35,"navigation"],[68,47,56,18],[69,0,63,6,"styleInterpolator"],[69,8,63,6,"styleInterpolator"],[69,25,63,23],[69,27,63,25,"mode"],[69,31,63,29],[69,36,63,34],[69,43,63,25],[69,46,63,44,"isHeaderStatic"],[69,60,63,58],[69,63,63,61,"gestureDirection"],[69,79,63,77],[69,84,63,82],[69,94,63,61],[69,98,63,96,"gestureDirection"],[69,114,63,112],[69,119,63,117],[69,138,63,61],[69,141,63,139,"forSlideUp"],[69,177,63,61],[69,180,63,152,"gestureDirection"],[69,196,63,168],[69,201,63,173],[69,222,63,152],[69,225,63,197,"forSlideRight"],[69,264,63,152],[69,267,63,213,"forSlideLeft"],[69,305,63,58],[69,308,63,228,"styleInterpolator"],[69,325,63,25],[69,328,63,248,"forNoAnimation"],[70,0,56,18],[70,7,56,4],[71,0,65,4],[71,13,65,24,"React"],[71,18,65,29],[71,19,65,30,"createElement"],[71,32,65,24],[71,33,65,44,"NavigationContext"],[71,68,65,62,"Provider"],[71,76,65,24],[71,78,65,72],[72,0,66,6,"key"],[72,8,66,6,"key"],[72,11,66,9],[72,13,66,11,"scene"],[72,18,66,16],[72,19,66,17,"route"],[72,24,66,11],[72,25,66,23,"key"],[72,28,65,72],[73,0,67,6,"value"],[73,8,67,6,"value"],[73,13,67,11],[73,15,67,13,"scene"],[73,20,67,18],[73,21,67,19,"descriptor"],[73,31,67,13],[73,32,67,30,"navigation"],[74,0,65,72],[74,7,65,24],[74,9,68,20,"React"],[74,14,68,25],[74,15,68,26,"createElement"],[74,28,68,20],[74,29,68,40,"React"],[74,34,68,45],[74,35,68,46,"Fragment"],[74,43,68,20],[74,45,68,56],[74,49,68,20],[74,51,68,75,"React"],[74,56,68,80],[74,57,68,81,"createElement"],[74,70,68,75],[74,71,68,95,"View"],[74,88,68,75],[74,90,68,101],[75,0,69,6,"onLayout"],[75,8,69,6,"onLayout"],[75,16,69,14],[75,18,69,16,"onContentHeightChange"],[75,39,69,37],[75,42,69,40],[75,52,69,40,"e"],[75,53,69,41],[76,0,69,41],[76,17,69,45,"onContentHeightChange"],[76,38,69,66],[76,39,69,67],[77,0,70,8,"route"],[77,12,70,8,"route"],[77,17,70,13],[77,19,70,15,"scene"],[77,24,70,20],[77,25,70,21,"route"],[77,30,69,67],[78,0,71,8,"height"],[78,12,71,8,"height"],[78,18,71,14],[78,20,71,16,"e"],[78,21,71,17],[78,22,71,18,"nativeEvent"],[78,33,71,16],[78,34,71,30,"layout"],[78,40,71,16],[78,41,71,37,"height"],[79,0,69,67],[79,11,69,66],[79,12,69,41],[80,0,69,41],[80,9,69,37],[80,12,72,11,"undefined"],[80,21,68,101],[81,0,73,6,"pointerEvents"],[81,8,73,6,"pointerEvents"],[81,21,73,19],[81,23,73,21,"isFocused"],[81,32,73,30],[81,35,73,33],[81,45,73,30],[81,48,73,46],[81,54,68,101],[82,0,74,6,"accessibilityElementsHidden"],[82,8,74,6,"accessibilityElementsHidden"],[82,35,74,33],[82,37,74,35],[82,38,74,36,"isFocused"],[82,47,68,101],[83,0,75,6,"importantForAccessibility"],[83,8,75,6,"importantForAccessibility"],[83,33,75,31],[83,35,75,33,"isFocused"],[83,44,75,42],[83,47,75,45],[83,53,75,42],[83,56,75,54],[83,77,68,101],[84,0,76,6,"style"],[84,8,76,6,"style"],[84,13,76,11],[84,15,78,6,"mode"],[84,19,78,10],[84,24,78,15],[84,31,78,6],[84,35,78,26],[84,36,78,27,"isFocused"],[84,45,78,6],[84,49,78,40,"options"],[84,56,78,47],[84,57,78,48,"headerTransparent"],[84,74,78,6],[84,77,78,68,"styles"],[84,83,78,74],[84,84,78,75,"header"],[84,90,78,6],[84,93,78,84],[85,0,68,101],[85,7,68,75],[85,9,79,7,"options"],[85,16,79,14],[85,17,79,15,"headerShown"],[85,28,79,7],[85,33,79,31],[85,38,79,7],[85,41,79,39,"options"],[85,48,79,46],[85,49,79,47,"header"],[85,55,79,39],[85,60,79,58,"undefined"],[85,69,79,39],[85,72,79,70,"options"],[85,79,79,77],[85,80,79,78,"header"],[85,86,79,70],[85,87,79,85,"props"],[85,92,79,70],[85,93,79,39],[85,96,79,107,"React"],[85,101,79,112],[85,102,79,113,"createElement"],[85,115,79,107],[85,116,79,127,"Header"],[85,131,79,107],[85,133,79,135,"props"],[85,138,79,107],[85,139,79,7],[85,142,79,144],[85,146,68,75],[85,147,68,20],[85,148,65,24],[85,149,65,4],[86,0,80,3],[86,5,22,5],[86,6,19,22],[86,7,19,2],[87,0,81,1],[89,0,82,0],[89,6,82,6,"styles"],[89,12,82,12],[89,15,82,15,"StyleSheet"],[89,39,82,26,"create"],[89,45,82,15],[89,46,82,33],[90,0,83,2,"header"],[90,4,83,2,"header"],[90,10,83,8],[90,12,83,10],[91,0,84,4,"position"],[91,6,84,4,"position"],[91,14,84,12],[91,16,84,14],[91,26,83,10],[92,0,85,4,"top"],[92,6,85,4,"top"],[92,9,85,7],[92,11,85,9],[92,12,83,10],[93,0,86,4,"left"],[93,6,86,4,"left"],[93,10,86,8],[93,12,86,10],[93,13,83,10],[94,0,87,4,"right"],[94,6,87,4,"right"],[94,11,87,9],[94,13,87,11],[95,0,83,10],[96,0,82,33],[96,3,82,15],[96,4,82,0]],"functionMap":{"names":["<global>","HeaderContainer","scenes.slice.map$argument_0","<anonymous>"],"mappings":"AAA;eCK;0BCgB;wCC+C;QDG;GDQ;CDC"}},"type":"js/module"}]}